<?php
/**
 * Created by PhpStorm.
 * User: root
 * Date: 2/17/18
 * Time: 11:11 PM
 */

use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;

function drupal_poet_module_node_presave(Node $node)
{
// twig_var_dump($node->bundle());
    if ($node->type = 'article') {
        if ($node->isPublished()) {
            // The node has been published.
            $connection = \Drupal::database();
            $query = $connection->query("SELECT frost_url, token FROM token_url ORDER BY id DESC LIMIT 1");
            $result = $query->fetchAssoc();
            if ($result['frost_url'] != '') {
                $frost_url = $result['frost_url'];

            } else {
                $frost_url = 'https://api.frost.po.et';
            }

            $body = $node->get('body')->value;
            $summary = $node->get('body')->summary;
            $term = Term::load($node->get('field_tags')->target_id);
            if ($term) {
                $term_name = $term->getName();
            } else {
                $term_name = '';
            }
            $token = $result['token'];
            $headers =
                [
                    'token' => $token,
                    'Content-Type' => 'application/json',
                    'Accept' => 'application/json'
                ];
            $data = [
                'name' => $node->getTitle(),
                'content' => $body,
                'author' => $node->getOwner()->getAccountName(),
                'dateCreated' => date(DATE_ISO8601, $node->getCreatedTime()),
                'datePublished' => date(DATE_ISO8601, $node->getCreatedTime()),
                'tags' => $term_name
            ];

            $http = \Drupal::httpClient();
            $response = $http->post($frost_url . '/works', [
                'body' => json_encode($data),
                'headers' => $headers
            ]);
            if ($response->getStatusCode() == 200) {
                $body = json_decode($response->getBody());
                $node->set('field_workid', $body->workId);

            }


        }
    }

}

function drupal_poet_module_node_view(array &$build, Node $node, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode)
{
    if ($node->field_workid) {
        if ($node->field_workid->value != '') {
            $build['signature'] = [
                '#theme' => 'drupal_poet_module_signature',
                '#work_id' => $node->field_workid->value,
                '#weight' => 10,
            ];

            $build['body']['#weight'] = 9;
        }
    }
}

function drupal_poet_module_theme()
{
    return [
        'drupal_poet_module_signature' => [
            'variables' => ['work_id' => NULL
            ],
        ],
    ];
}

function drupal_poet_module_node_update(Node $node)
{
    if ($node->type == 'article') {
        if ($node->isPublished()) {
            // The node has been published.
            $connection = \Drupal::database();
            $query = $connection->query("SELECT frost_url, token FROM token_url ORDER BY id DESC LIMIT 1");
            $result = $query->fetchAssoc();
            if ($result['frost_url'] != '') {
                $frost_url = $result['frost_url'];

            } else {
                $frost_url = 'https://api.frost.po.et';
            }


            $body = $node->get('body')->value;
            $summary = $node->get('body')->summary;
            $term = Term::load($node->get('field_tags')->target_id);
            if ($term) {
                $term_name = $term->getName();
            } else {
                $term_name = '';
            }

            $token = $result['token'];
            $headers =
                [
                    'token' => $token,
                    'Content-Type' => 'application/json',
                    'Accept' => 'application/json'
                ];
            $data = [
                'name' => $node->getTitle(),
                'content' => $body,
                'author' => $node->getOwner()->getAccountName(),
                'dateCreated' => date(DATE_ISO8601, $node->getCreatedTime()),
                'datePublished' => date(DATE_ISO8601, $node->getCreatedTime()),
                'tags' => $term_name
            ];

            $http = \Drupal::httpClient();
            $response = $http->post($frost_url . '/works', [
                'body' => json_encode($data),
                'headers' => $headers
            ]);
            if ($response->getStatusCode() == 200) {
                $body = json_decode($response->getBody());
                $node->set('field_workid', $body->workId);

            }


        }

    }
}
